networks:
  local-network:
    name: local-network
    external: false

services:
  service-nginx:
    container_name: service-nginx
    image: nginx:latest
    build: ./docker/nginx/
    networks:
      - local-network
    depends_on:
      - service-php
      - service-database
    volumes:
      - ../:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/sites-available
      - ./docker/nginx/sites/:/etc/nginx/sites-enabled
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
  service-php:
    container_name: service-php
    depends_on:
      - service-database
    networks: 
      - local-network
    environment:
      DATABASE_URL: mysql://${DB_USER}:${DB_PASS}@service-database:3306/${DB_NAME}?serverVersion=8.0
    build:
      context: ./
      dockerfile: ./docker/php/Dockerfile
    volumes:
      - ./:/var/www/html/
    ports:
      - 9000:80
  service-database:
    container_name: service-database
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - local-network
    environment:
      MYSQL_ROOT_PASSWORD: secretPass
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    ports:
      - 4306:3306
    volumes:
      - ./.temp/mysql:/var/lib/mysql
  service-phpmyadmin:
      container_name: service-phpmyadmin
      image: phpmyadmin:latest
      depends_on:
        - service-database
      networks:
        - local-network
      environment:
        PMA_HOST: service-database
      ports:
        - 8080:80